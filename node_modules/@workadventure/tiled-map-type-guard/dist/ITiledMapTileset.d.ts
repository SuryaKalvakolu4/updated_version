import * as tg from 'generic-type-guard';
export declare const isTiledMapTileset: tg.TypeGuard<object & {
    name: string;
    image: string;
} & Partial<{
    backgroundcolor: string;
    columns: number;
    firstgid: number;
    grid: object & {
        width: any;
        height: any;
        orientation: any;
    };
    id: number;
    imageheight: number;
    imagewidth: number;
    margin: number;
    objectalignment: string;
    properties: (object & {
        name: any;
        type: any;
        value: any;
    })[];
    source: string;
    spacing: number;
    terrains: (object & {
        name: any;
        tile: any;
    } & Partial<{
        properties: any;
    }>)[];
    tilecount: number;
    tiledversion: string;
    tileheight: number;
    tileoffset: object & {
        x: any;
        y: any;
    };
    tiles: (object & {
        id: any;
    } & Partial<{
        animation: any;
        image: any;
        imageheight: any;
        imagewidth: any;
        objectgroup: any;
        probability: any;
        properties: any;
        terrain: any;
        type: any;
    }>)[];
    tilewidth: number;
    transformations: object & Partial<{
        hflip: any;
        vflip: any;
        rotate: any;
        preferuntransformed: any;
    }>;
    transparentcolor: string;
    type: "tileset";
    version: string | number;
    wangsets: (object & {
        name: any;
        tile: any;
    } & Partial<{
        colors: any;
        properties: any;
        wangtiles: any;
    }>)[];
}>>;
export declare type ITiledMapTileset = tg.GuardedType<typeof isTiledMapTileset>;
