import * as tg from 'generic-type-guard';
export declare const isTiledMapLayer: tg.PartialTypeGuard<unknown, (object & {
    data: string | number[];
    height: number;
    id: number;
    name: string;
    opacity: number;
    type: "tilelayer";
    visible: boolean;
    width: number;
} & Partial<{
    chunks: (object & {
        data: any;
        height: any;
        width: any;
        x: any;
        y: any;
    })[];
    compression: string;
    encoding: "csv" | "base64";
    offsetx: number;
    offsety: number;
    parallaxx: number;
    parallaxy: number;
    properties: (object & {
        name: any;
        type: any;
        value: any;
    })[];
    startx: number;
    starty: number;
    tintcolor: string;
    x: number;
    y: number;
}>) | (object & {
    opacity: number;
    name: string;
    visible: boolean;
    type: "group";
    layers: ((object & {
        data: string | number[];
        height: number;
        id: number;
        name: string;
        opacity: number;
        type: "tilelayer";
        visible: boolean;
        width: number;
    } & Partial<{
        chunks: (object & {
            data: any;
            height: any;
            width: any;
            x: any;
            y: any;
        })[];
        compression: string;
        encoding: "csv" | "base64";
        offsetx: number;
        offsety: number;
        parallaxx: number;
        parallaxy: number;
        properties: (object & {
            name: any;
            type: any;
            value: any;
        })[];
        startx: number;
        starty: number;
        tintcolor: string;
        x: number;
        y: number;
    }>) | (object & any & Partial<{
        height: number;
        draworder: string;
        id: number;
        offsetx: number;
        offsety: number;
        parallaxx: number;
        parallaxy: number;
        properties: (object & {
            name: string;
            type: string;
            value: string | number | boolean | undefined;
        })[];
        startx: number;
        starty: number;
        tintcolor: string;
        width: number;
        x: number;
        y: number;
    }>) | (object & {
        name: string;
        objects: (object & {
            id: any;
            name: any;
            type: any;
            visible: any;
            x: any;
            y: any;
        } & Partial<{
            ellipse: any;
            gid: any;
            height: any;
            point: any;
            polygon: any;
            polyline: any;
            properties: any;
            rotation: any;
            template: any;
            text: any;
            width: any;
        }>)[];
        opacity: number;
        type: "objectgroup";
        visible: boolean;
    } & Partial<{
        draworder: string;
        height: number;
        id: number;
        offsetx: number;
        offsety: number;
        parallaxx: number;
        parallaxy: number;
        properties: (object & {
            name: any;
            type: any;
            value: any;
        })[];
        startx: number;
        starty: number;
        tintcolor: string;
        width: number;
        x: number;
        y: number;
    }>) | (object & {
        image: string;
        name: string;
        opacity: number;
        type: "imagelayer";
        visible: boolean;
    } & Partial<{
        height: number;
        id: number;
        offsetx: number;
        offsety: number;
        parallaxx: number;
        parallaxy: number;
        properties: (object & {
            name: any;
            type: any;
            value: any;
        })[];
        startx: number;
        starty: number;
        tintcolor: string;
        width: number;
        x: number;
        y: number;
    }>))[];
} & Partial<{
    height: number;
    draworder: string;
    id: number;
    offsetx: number;
    offsety: number;
    parallaxx: number;
    parallaxy: number;
    properties: (object & {
        name: string;
        type: string;
        value: string | number | boolean | undefined;
    })[];
    startx: number;
    starty: number;
    tintcolor: string;
    width: number;
    x: number;
    y: number;
}>) | (object & {
    name: string;
    objects: (object & {
        id: any;
        name: any;
        type: any;
        visible: any;
        x: any;
        y: any;
    } & Partial<{
        ellipse: any;
        gid: any;
        height: any;
        point: any;
        polygon: any;
        polyline: any;
        properties: any;
        rotation: any;
        template: any;
        text: any;
        width: any;
    }>)[];
    opacity: number;
    type: "objectgroup";
    visible: boolean;
} & Partial<{
    draworder: string;
    height: number;
    id: number;
    offsetx: number;
    offsety: number;
    parallaxx: number;
    parallaxy: number;
    properties: (object & {
        name: any;
        type: any;
        value: any;
    })[];
    startx: number;
    starty: number;
    tintcolor: string;
    width: number;
    x: number;
    y: number;
}>) | (object & {
    image: string;
    name: string;
    opacity: number;
    type: "imagelayer";
    visible: boolean;
} & Partial<{
    height: number;
    id: number;
    offsetx: number;
    offsety: number;
    parallaxx: number;
    parallaxy: number;
    properties: (object & {
        name: any;
        type: any;
        value: any;
    })[];
    startx: number;
    starty: number;
    tintcolor: string;
    width: number;
    x: number;
    y: number;
}>)>;
export declare type ITiledMapLayer = tg.GuardedType<typeof isTiledMapLayer>;
