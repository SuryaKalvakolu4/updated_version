import { IframeApiContribution } from "./IframeApiContribution";
import type { HasPlayerMovedEventCallback } from "../Events/HasPlayerMovedEvent";
export declare const setPlayerName: (name: string) => void;
export declare const setPlayerLanguage: (language: string | undefined) => void;
export declare const setTags: (_tags: string[]) => void;
export declare const setUserRoomToken: (token: string | undefined) => void;
export declare const setUuid: (_uuid: string | undefined) => void;
export declare class WorkadventurePlayerCommands extends IframeApiContribution<WorkadventurePlayerCommands> {
    readonly state: import("./state").WorkadventureStateCommands & {
        [key: string]: unknown;
    };
    callbacks: {
        type: "hasPlayerMoved";
        callback: (event: {
            oldX?: number | undefined;
            oldY?: number | undefined;
            x: number;
            y: number;
            direction: "left" | "right" | "up" | "down";
            moving: boolean;
        }) => void;
    }[];
    onPlayerMove(callback: HasPlayerMovedEventCallback): void;
    get name(): string;
    get language(): string;
    get tags(): string[];
    get id(): string | undefined;
    getPosition(): Promise<Position>;
    moveTo(x: number, y: number, speed?: number): Promise<{
        x: number;
        y: number;
        cancelled: boolean;
    }>;
    get userRoomToken(): string | undefined;
    setOutlineColor(red: number, green: number, blue: number): Promise<void>;
    removeOutlineColor(): Promise<void>;
}
export declare type Position = {
    x: number;
    y: number;
};
declare const _default: WorkadventurePlayerCommands;
export default _default;
